name: PR CI and Staging Deployment

on:
  pull_request:
    branches:
      - main

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Maven cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Run JUnit tests
        run: ./mvnw test

      - name: Run Checkstyle static analysis
        run: ./mvnw checkstyle:check

  build-and-push:
    needs: test-and-analyze
    if: github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/touheedkn-staging:${{ github.sha }} .

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/touheedkn-staging:${{ github.sha }}

      - name: Deploy to Staging Environment
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/touheedkn-staging:${{ github.sha }}
          STAGING_HOST: ${{ secrets.STAGING_HOST }}
          STAGING_USER: ${{ secrets.STAGING_USER }}
          STAGING_SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
        run: |
          echo "$STAGING_SSH_KEY" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key $STAGING_USER@$STAGING_HOST "docker pull $DOCKER_IMAGE && docker stop app || true && docker rm app || true && docker run -d --name app $DOCKER_IMAGE"
        if: ${{ success() }}